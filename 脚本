-- 手机横屏端罗布乐思多功能脚本
-- 专为移动设备横屏模式优化
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- 检测设备类型
local isMobile = UserInputService.TouchEnabled
local isGamepad = UserInputService.GamepadEnabled

print("设备检测: 移动设备=" .. tostring(isMobile) .. ", 手柄=" .. tostring(isGamepad))

-- 卡密验证系统
local correctPassword = "XC"
local isVerified = false

-- 创建验证UI
local function createVerificationUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "VerificationUI"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = playerGui

    -- 主验证面板
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "VerificationFrame"
    mainFrame.Size = UDim2.new(0, 320, 0, 280)
    mainFrame.Position = UDim2.new(0.5, -160, 0.5, -140)
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    mainFrame.BackgroundTransparency = 0.1
    mainFrame.BorderSizePixel = 0
    mainFrame.Visible = true
    mainFrame.ZIndex = 10
    mainFrame.Parent = screenGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = mainFrame

    -- 标题栏
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 50)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = Color3.fromRGB(41, 128, 185)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame

    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 12)
    titleCorner.Parent = titleBar

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, 0, 1, 0)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "🔒 脚本验证系统"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 18
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = titleBar

    -- 验证说明
    local description = Instance.new("TextLabel")
    description.Name = "Description"
    description.Size = UDim2.new(1, -40, 0, 60)
    description.Position = UDim2.new(0, 20, 0, 60)
    description.BackgroundTransparency = 1
    description.Text = "请输入卡密进行验证\n卡密获取请联系管理员"
    description.TextColor3 = Color3.fromRGB(200, 200, 200)
    description.TextSize = 14
    description.Font = Enum.Font.Gotham
    description.TextWrapped = true
    description.TextYAlignment = Enum.TextYAlignment.Top
    description.Parent = mainFrame

    -- 密码输入框
    local passwordFrame = Instance.new("Frame")
    passwordFrame.Name = "PasswordFrame"
    passwordFrame.Size = UDim2.new(1, -40, 0, 50)
    passwordFrame.Position = UDim2.new(0, 20, 0, 130)
    passwordFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    passwordFrame.BorderSizePixel = 0
    passwordFrame.Parent = mainFrame

    local passwordCorner = Instance.new("UICorner")
    passwordCorner.CornerRadius = UDim.new(0, 8)
    passwordCorner.Parent = passwordFrame

    local passwordBox = Instance.new("TextBox")
    passwordBox.Name = "PasswordBox"
    passwordBox.Size = UDim2.new(1, -20, 1, -10)
    passwordBox.Position = UDim2.new(0, 10, 0, 5)
    passwordBox.BackgroundTransparency = 1
    passwordBox.Text = ""
    passwordBox.PlaceholderText = "请输入卡密..."
    passwordBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    passwordBox.TextSize = 16
    passwordBox.Font = Enum.Font.Gotham
    passwordBox.ClearTextOnFocus = false
    passwordBox.Parent = passwordFrame

    -- 验证按钮
    local verifyButton = Instance.new("TextButton")
    verifyButton.Name = "VerifyButton"
    verifyButton.Size = UDim2.new(1, -40, 0, 45)
    verifyButton.Position = UDim2.new(0, 20, 0, 200)
    verifyButton.BackgroundColor3 = Color3.fromRGB(46, 204, 113)
    verifyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    verifyButton.Text = "✅ 验证卡密"
    verifyButton.TextSize = 16
    verifyButton.Font = Enum.Font.GothamBold
    verifyButton.Parent = mainFrame

    local verifyCorner = Instance.new("UICorner")
    verifyCorner.CornerRadius = UDim.new(0, 8)
    verifyCorner.Parent = verifyButton

    -- 状态提示
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Size = UDim2.new(1, -40, 0, 30)
    statusLabel.Position = UDim2.new(0, 20, 0, 250)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "等待验证..."
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    statusLabel.TextSize = 14
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.Parent = mainFrame

    -- 验证按钮点击事件
    verifyButton.MouseButton1Click:Connect(function()
        local inputPassword = passwordBox.Text
        if inputPassword == correctPassword then
            isVerified = true
            statusLabel.Text = "✅ 验证成功！正在加载脚本..."
            statusLabel.TextColor3 = Color3.fromRGB(46, 204, 113)
            
            -- 渐变消失效果
            local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local tween = TweenService:Create(mainFrame, tweenInfo, {BackgroundTransparency = 1})
            tween:Play()
            
            wait(0.5)
            screenGui:Destroy()
            
            -- 验证成功后加载主脚本
            loadMainScript()
        else
            statusLabel.Text = "❌ 卡密错误，请重试"
            statusLabel.TextColor3 = Color3.fromRGB(231, 76, 60)
            
            -- 错误震动效果
            local shakeTween = TweenService:Create(mainFrame, TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 3, true), {
                Position = UDim2.new(0.5, -165, 0.5, -140)
            })
            shakeTween:Play()
        end
    end)

    -- 回车键验证
    passwordBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            verifyButton.MouseButton1Click:Execute()
        end
    end)
end

-- 主脚本功能
local function loadMainScript()
    -- 等待角色加载
    local character = player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")

    -- 状态变量
    local flyEnabled = false
    local noclipEnabled = false
    local speedEnabled = false
    local backgroundEnabled = false
    local guiVisible = true
    local flySpeed = 30
    local walkSpeed = 16
    local originalWalkSpeed = humanoid.WalkSpeed
    local bodyVelocity, bodyGyro

    -- 横屏模式检测
    local function isLandscape()
        local viewportSize = workspace.CurrentCamera.ViewportSize
        return viewportSize.X > viewportSize.Y
    end

    -- 创建手机优化控制GUI
    local function createMobileGUI()
        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "MobileControlGUI"
        screenGui.ResetOnSpawn = false
        screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        screenGui.Parent = playerGui

        -- 主控制面板（底部工具栏）
        local mainPanel = Instance.new("Frame")
        mainPanel.Name = "MainPanel"
        mainPanel.Size = UDim2.new(1, 0, 0, 80)
        mainPanel.Position = UDim2.new(0, 0, 1, -80)
        mainPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
        mainPanel.BackgroundTransparency = 0.2
        mainPanel.BorderSizePixel = 0
        mainPanel.Parent = screenGui

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 12)
        corner.Parent = mainPanel

        -- 功能按钮容器
        local buttonContainer = Instance.new("Frame")
        buttonContainer.Name = "ButtonContainer"
        buttonContainer.Size = UDim2.new(1, -40, 1, -20)
        buttonContainer.Position = UDim2.new(0, 20, 0, 10)
        buttonContainer.BackgroundTransparency = 1
        buttonContainer.Parent = mainPanel

        local uiListLayout = Instance.new("UIListLayout")
        uiListLayout.FillDirection = Enum.FillDirection.Horizontal
        uiListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        uiListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
        uiListLayout.Padding = UDim.new(0, 10)
        uiListLayout.Parent = buttonContainer

        -- 创建功能按钮函数
        local function createMobileButton(name, icon, color)
            local button = Instance.new("TextButton")
            button.Name = name
            button.Size = UDim2.new(0, 60, 0, 60)
            button.BackgroundColor3 = color or Color3.fromRGB(60, 60, 80)
            button.TextColor3 = Color3.fromRGB(255, 255, 255)
            button.Text = icon .. "\n" .. name
            button.TextSize = 12
            button.Font = Enum.Font.GothamBold
            button.TextWrapped = true
            button.Parent = buttonContainer

            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 8)
            corner.Parent = button
            
            return button
        end

        -- 创建移动端功能按钮
        local buttons = {
            flyButton = createMobileButton("飞行", "🚀", Color3.fromRGB(255, 87, 51)),
            noclipButton = createMobileButton("穿墙", "👻", Color3.fromRGB(156, 39, 176)),
            speedButton = createMobileButton("加速", "⚡", Color3.fromRGB(255, 193, 7)),
            backgroundButton = createMobileButton("背景", "🎨", Color3.fromRGB(76, 175, 80)),
            hideButton = createMobileButton("隐藏", "👁", Color3.fromRGB(33, 150, 243))
        }

        -- 状态显示标签
        local statusLabel = Instance.new("TextLabel")
        statusLabel.Name = "StatusLabel"
        statusLabel.Size = UDim2.new(0.3, 0, 1, -10)
        statusLabel.Position = UDim2.new(0.7, 0, 0, 5)
        statusLabel.BackgroundTransparency = 1
        statusLabel.Text = "脚本已加载\n验证状态: ✅"
        statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        statusLabel.TextSize = 12
        statusLabel.Font = Enum.Font.Gotham
        statusLabel.TextWrapped = true
        statusLabel.TextXAlignment = Enum.TextXAlignment.Right
        statusLabel.Parent = mainPanel

        -- 功能实现
        local function enableFlight()
            if not flyEnabled then
                flyEnabled = true
                bodyVelocity = Instance.new("BodyVelocity")
                bodyGyro = Instance.new("BodyGyro")
                
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.MaxForce = Vector3.new(40000, 40000, 40000)
                bodyVelocity.Parent = rootPart
                
                bodyGyro.MaxTorque = Vector3.new(40000, 40000, 40000)
                bodyGyro.P = 1000
                bodyGyro.D = 100
                bodyGyro.Parent = rootPart
                
                buttons.flyButton.BackgroundColor3 = Color3.fromRGB(46, 204, 113)
                statusLabel.Text = "飞行模式: 开启"
            else
                flyEnabled = false
                if bodyVelocity then bodyVelocity:Destroy() end
                if bodyGyro then bodyGyro:Destroy() end
                buttons.flyButton.BackgroundColor3 = Color3.fromRGB(255, 87, 51)
                statusLabel.Text = "飞行模式: 关闭"
            end
        end

        local function enableNoclip()
            noclipEnabled = not noclipEnabled
            if noclipEnabled then
                buttons.noclipButton.BackgroundColor3 = Color3.fromRGB(46, 204, 113)
                statusLabel.Text = "穿墙模式: 开启"
            else
                buttons.noclipButton.BackgroundColor3 = Color3.fromRGB(156, 39, 176)
                statusLabel.Text = "穿墙模式: 关闭"
            end
        end

        local function enableSpeed()
            speedEnabled = not speedEnabled
            if speedEnabled then
                humanoid.WalkSpeed = walkSpeed
                buttons.speedButton.BackgroundColor3 = Color3.fromRGB(46, 204, 113)
                statusLabel.Text = "加速模式: 开启"
            else
                humanoid.WalkSpeed = originalWalkSpeed
                buttons.speedButton.BackgroundColor3 = Color3.fromRGB(255, 193, 7)
                statusLabel.Text = "加速模式: 关闭"
            end
        end

        local function enableBackground()
            backgroundEnabled = not backgroundEnabled
            if backgroundEnabled then
                Lighting.Brightness = 2
                Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
                buttons.backgroundButton.BackgroundColor3 = Color3.fromRGB(46, 204, 113)
                statusLabel.Text = "背景优化: 开启"
            else
                Lighting.Brightness = 1
                Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
                buttons.backgroundButton.BackgroundColor3 = Color3.fromRGB(76, 175, 80)
                statusLabel.Text = "背景优化: 关闭"
            end
        end

        local function toggleGUI()
            guiVisible = not guiVisible
            mainPanel.Visible = guiVisible
            if guiVisible then
                buttons.hideButton.Text = "👁\n隐藏"
                statusLabel.Text = "UI面板: 显示"
            else
                buttons.hideButton.Text = "👁\n显示"
                statusLabel.Text = "UI面板: 隐藏"
            end
        end

        -- 按钮点击事件
        buttons.flyButton.MouseButton1Click:Connect(enableFlight)
        buttons.noclipButton.MouseButton1Click:Connect(enableNoclip)
        buttons.speedButton.MouseButton1Click:Connect(enableSpeed)
        buttons.backgroundButton.MouseButton1Click:Connect(enableBackground)
        buttons.hideButton.MouseButton1Click:Connect(toggleGUI)

        -- 主循环
        local connection
        connection = RunService.Stepped:Connect(function()
            -- 飞行控制
            if flyEnabled and bodyGyro then
                bodyGyro.CFrame = workspace.CurrentCamera.CFrame
            end

            -- 穿墙状态
            if noclipEnabled and character then
                for _, child in ipairs(character:GetDescendants()) do
                    if child:IsA("BasePart") then
                        child.CanCollide = false
                    end
                end
            end

            -- 屏幕方向检测
            if not isLandscape() then
                statusLabel.Text = "请切换到横屏模式"
            end
        end)

        -- 角色重置处理
        player.CharacterAdded:Connect(function(newCharacter)
            character = newCharacter
            humanoid = newCharacter:WaitForChild("Humanoid")
            rootPart = newCharacter:WaitForChild("HumanoidRootPart")
            originalWalkSpeed = humanoid.WalkSpeed
            
            -- 重置状态
            flyEnabled = false
            noclipEnabled = false
            speedEnabled = false
            backgroundEnabled = false
            
            -- 重置按钮颜色
            for _, button in pairs(buttons) do
                button.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
            end
            
            statusLabel.Text = "角色已重置"
        end)
    end

    -- 启动移动端脚本
    if isMobile then
        createMobileGUI()
        print("移动端脚本已加载 - 验证状态: ✅")
    else
        print("检测到非移动设备")
    end
end

-- 启动验证系统
if not isVerified then
    createVerificationUI()
end
